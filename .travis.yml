jdk: oraclejdk8
sudo: required
dist: trusty
env:
  global:
    - PATH=$HOME/.local/bin:$PATH
    - AWS_DEFAULT_REGION=us-east-1
    - secure: "nuWszvKWAYfD4WL11B5RwtcOvDBtKVCAtFDwduz+4GKH6URMgRNZfypnutHf7KMnor1S1EqYm6RxdA9mhLHVwT3cfGHvStlYqrS9bhs16zzSc5pnt5S3lKv2YGcQgR+5O/22zZLPqnoi5Mgi+/TYsCq1WDusy/wCi7pQ2rqJUcVB94TYvU0zGUcFqBsU7/I8tMeCowGTVLIvvVAezK6Te0lP5nN7fnXWio34etnR2qSMkjDmfodUFkZOMO6NrmbAtXDjmKgEX/5+LYr7kEhf/AVNCB/7KH4h/WQGjx92OqZS2jdv9MJDhh/ssTHieL7B0wiQvNn8KF86R129Vtl2VvdZ9TqxIMgrXlDY3q6dSaBi6ykSpSxfxmAMg1ODCJkzScD7X+pQQ6ueSbSqeQgHzENOfn5mbh+qpCKfy2uUynzStzTxrWDiN+8KElCa3Y4Pd7FIPnEODFDHTBDhU72+JjLHZ2QqmAKLG3SVNyPMTqC2eTmO610S46QDqlpHfiwM6RWhd6YKf4nP2xsvpxeW5dAo54g0eHVRBagVs9b1wBJKcrmn+Bco9UsaskCOzXw0Q3LlkHyWj4Um66KnOFYyeRNKbUedS23IZSO4EBwCFc6srZ3FeBm/po/7EbkWuUGvUrhKauQGmo8dZe8XJhLbobAYH9cAWFW+oYyFhuv+jYA="
    - secure: "f83VVKN6WDXQynJaANwATptOMZfT9l7UEn0NEMvVGHx3Qu6w6TIAOJ6G8KbX+m02xbhM07TXH1BI6W2J9mNyHVk4JmQFXs478KyhpvgXW9tcepdAXSMehYZ+3Mstt7jIX2uGgj9YONLF6URkcKm4PLrsSs/ckrJMDMqt63rSgCee8rxgOTg+WGX3/fXHer9tiPE1ATmUi+CGCEIINzZgDtxvjLn5mRixCGZ7EICb/n1+N9Y3ex7oXAtSA+G/mSMpJ+GjLV1BZWmZCAROW7DLMflqMCAJIut79L8PWLCXB9eY7ZGCPiiDigdc9KZWuEWLHV7B94KRjcJDF+6VSV1Z44WDKVyrnHkEHcBzV2vJyBArAxG9ZWoQZ6/bc3Vo9zZ5o3jefZUJA5mIqOXgv92SzstQ5q5YwbBT6u1rX/OUKF/En4adVKUucas6RSneOUWXC//g6z8CKoUvieuYGriJzYUm33mx8K+uwqpKZp8rM2boppzaE9WkUzEANcQXan37UbbAHEuS4jZQu0C52U9ft0TomHjuGBcjwTCI+CjWC2KqgNMrdroaeEp0yI1aCmkR+18dq3kKvaUP8jnSVM6VDJthqxmYInhqzdhElfFSg8fdQLLzGkfj1cTDIUksDkwQL+rEuWz3uYuqetnUZFVdOUUhFwfoBLS4PgifqWYR0BA="

matrix:
  include:
    - if: commit_message =~ /android/
      env: TEST_SUITE="SmokeTestSuit"
      language: generic
      os: linux

    - if: commit_message =~ /android/
      env: TEST_SUITE="TravisTest123"
      language: generic
      os: linux

before_install:
  - ANDROID_TOOLS=4333796 # android-28
  - export ANDROID_HOME=~/android-sdk
  - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip
  - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
  # Silence warning.
  - mkdir -p ~/.android
  - touch ~/.android/repositories.cfg
  # Accept licenses before installing components, no need to echo y for each component
  - yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses
  # Platform tools
  - $ANDROID_HOME/tools/bin/sdkmanager "emulator" "tools" "platform-tools" > /dev/null
  # install older build tools (for emulator)
  - $ANDROID_HOME/tools/bin/sdkmanager "build-tools;28.0.3" "platforms;android-24" > /dev/null
  - $ANDROID_HOME/tools/bin/sdkmanager "extras;google;m2repository" "extras;google;google_play_services" "extras;android;m2repository" > /dev/null
  # Create and start emulator.
  - $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-24;default;armeabi-v7a" > /dev/null
  - rm -rf $ANDROID_HOME/emulator
  # Install latest canary of emulator
  - cd $ANDROID_HOME
  - sudo apt-get install -y libunwind8 libc++1
  - wget -q "https://dl.google.com/android/repository/emulator-linux-5438295.zip" -O emulator.zip
  - unzip -q emulator.zip
  - cd -
  - echo no | $ANDROID_HOME/tools/bin/avdmanager create avd -n Pixel_XL_API_24 -k "system-images;android-24;default;armeabi-v7a" --device 19
  - $ANDROID_HOME/emulator/mksdcard -l mySdCard 1024M mySdCardFile.img
  - cat /home/travis/.android/avd/Pixel_XL_API_24.avd/config.ini --show-all
  - $ANDROID_HOME/emulator/emulator -avd Pixel_XL_API_24 -no-window -no-audio -memory 1536 -sdcard $ANDROID_HOME/emulator/mySdCardFile.img &
  - $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
  - $ANDROID_HOME/platform-tools/adb shell input keyevent 82
  - cat /home/travis/.android/avd/Pixel_XL_API_24.avd/config.ini --show-all

install:
  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      sudo apt-get update
      sudo apt-get install build-essential libssl-dev
      sudo curl https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
      source ~/.profile
      nvm install 10.15.3
      nvm use 10.15.3
      npm install -g appium@1.9.1
      sudo apt-get install python3-pip
      pip3 --version
      pip3 install awscli --upgrade --user
      aws --version
    fi

before_script:
  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      $ANDROID_HOME/platform-tools/adb -P 5037 -s emulator-5554 install /home/travis/.nvm/versions/node/v10.15.3/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-v1.18.0.apk
    fi
  - mkdir -p ~/test_result_report_$TEST_SUITE

script:
  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      $ANDROID_HOME/platform-tools/adb -P 5037 -s emulator-5554 install /home/travis/.nvm/versions/node/v10.15.3/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk
    fi

  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      appium --log-level error &
      mvn -q clean verify -Dtags=$TEST_SUITE
    fi

  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      cd /home/travis/build/antonzenkevich/travisAndroid/target/
      zip -r ${TEST_SUITE}-${TRAVIS_BUILD_NUMBER}.zip site/*
      sudo mv ${TEST_SUITE}-${TRAVIS_BUILD_NUMBER}.zip ~/test_result_report_$TEST_SUITE
      aws s3 cp ~/test_result_report_$TEST_SUITE/${TEST_SUITE}-${TRAVIS_BUILD_NUMBER}.zip s3://travisandroid/tests/ --acl public-read-write
    fi

#sudo: required
#language: java
#
#matrix:
#  include:
#    - if: commit_message =~ /ios/
#      env: TEST_SUITE="TravisTest123"
#      os: osx
#      osx_image: xcode10.2
#      jdk: openjdk12
#
##    - if: commit_message =~ /ios/
##      env: TEST_SUITE="TravisTest1"
##      os: osx
##      osx_image: xcode10.2
##      jdk: openjdk12
#
#install:
#  - |
#    if [[ $TRAVIS_OS_NAME == "osx" ]]; then
#      brew update
#      brew install awscli
#      cd /Users/travis/build/antonzenkevich/travisAndroid
#      unzip "Perchwell Staging.zip"
#      npm install -g appium
#      brew cask install google-chrome
#    fi
#
#script:
#
#  - |
#    if [[ $TRAVIS_OS_NAME == "osx" ]]; then
#      appium &
#      mvn -q clean verify -Dtags=$TEST_SUITE -DtestEnvironment=ios
#    fi