jdk: oraclejdk11
sudo: required
dist: trusty
env:
  global:
    - PATH=$HOME/.local/bin:$PATH
    - SYS=25 ABI="google_apis;x86_64"

matrix:
  include:
    - if: commit_message =~ /android/
      env: TEST_SUITE="TravisTest"
      language: generic
      os: linux

before_install:
  - |
  if [ $TRAVIS_OS_NAME == "linux" ]; then
  export DISPLAY=:99.0
  sh -e /etc/init.d/xvfb start
  sleep 3 # give xvfb some time to start
  fi
  # Install android tools
  - ANDROID_TOOLS=4333796 # android-28
  - export ANDROID_HOME=~/android-sdk
  - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip
  - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
  # Silence warning.
  - mkdir -p ~/.android
  - touch ~/.android/repositories.cfg
  # Accept licenses before installing components, no need to echo y for each component
  - yes | sdkmanager --licenses
  # Platform tools
  - sdkmanager "emulator" "tools" "platform-tools" > /dev/null
  - sdkmanager --list | head -15
  # install older build tools (for emulator)
  - sdkmanager "build-tools;26.0.3" "platforms;android-25" > /dev/null
  # Create and start emulator.
  - sdkmanager "system-images;android-$SYS;$ABI" > /dev/null
  - sdkmanager --list | head -15
  - rm -rf $ANDROID_HOME/emulator
  # Install latest canary of emulator
  - cd $ANDROID_HOME
  - sudo apt-get install -y libunwind8 libc++1
  - wget -q "https://dl.google.com/android/repository/emulator-linux-5438295.zip" -O emulator.zip
  - unzip -q emulator.zip
  - cd -
  - echo no | avdmanager create avd -n Pixel_XL_API_25 -k "system-images;android-$SYS;$ABI"
  - $ANDROID_HOME/emulator/emulator -avd Pixel_XL_API_25 -no-snapshot -no-accel -no-window &
  - adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
  - adb shell input keyevent 82

install:
  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      sudo apt-get update
      sudo apt-get install build-essential libssl-dev
      sudo curl https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
      source ~/.profile
      nvm --version
      nvm install 10.15.3
      nvm use 10.15.3
      node -v
      npm -v
      brew update
      node -v
      npm -v
      npm install -g appium@1.9.1
#      sudo apt-get install python3-pip
#      pip3 --version
#      pip3 install awscli --upgrade --user
#      aws --version
    fi

script:
  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      appium --log-level error &
      mvn -q clean verify -Dtags=$TEST_SUITE -DtestEnvironment=android
    fi