jdk: oraclejdk11
language: android
os: linux
sudo: required
dist: trusty
env:
  global:
    - PATH=$HOME/.local/bin:$PATH

matrix:
  include:
    - if: commit_message =~ /android/
      env: TEST_SUITE="SmokeTestSuit"
      language: generic
      os: linux

    - if: commit_message =~ /android/
      env: TEST_SUITE="TravisTest123"
      language: generic
      os: linux

#android:
#  components:
#    - extra-google-google_play_services
#    - extra-google-m2repository
#    - extra-android-m2repository

before_install:
  - ANDROID_TOOLS=4333796 # android-28
  - export ANDROID_HOME=~/android-sdk
  - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip
  - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
  # Silence warning.
  - mkdir -p ~/.android
  - touch ~/.android/repositories.cfg
  # Accept licenses before installing components, no need to echo y for each component
  - yes | sdkmanager --licenses
  # Platform tools
  - sdkmanager "emulator" "tools" "platform-tools" > /dev/null
  # install older build tools (for emulator)
  - sdkmanager "build-tools;28.0.3" "platforms;android-24" > /dev/null
  # Create and start emulator.
  - sdkmanager "system-images;android-24;arm64-v8a" > /dev/null
  - sdkmanager --list
  - rm -rf $ANDROID_HOME/emulator
  # Install latest canary of emulator
  - $ANDROID_HOME/tools/android list device
  - cd $ANDROID_HOME
  - sudo apt-get install -y libunwind8 libc++1
  - wget -q "https://dl.google.com/android/repository/emulator-linux-5438295.zip" -O emulator.zip
  - unzip -q emulator.zip
  - cd -
  - echo no | avdmanager create avd -n Pixel_XL_API_24 -k "system-images;android-24;arm64-v8a"
  - $ANDROID_HOME/emulator/emulator -avd Pixel_XL_API_24 -no-snapshot -no-accel -no-window &
  - $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
  - $ANDROID_HOME/platform-tools/adb shell input keyevent 82

install:
  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      sudo apt-get update
      sudo apt-get install build-essential libssl-dev
      sudo curl https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
      source ~/.profile
      nvm install 10.15.3
      nvm use 10.15.3
      npm install -g appium@1.9.1
    fi

before_script:
  #  - |
  #    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
  #      echo no | android create avd --force -n Pixel_XL_API_24 --abi arm64-v8a -t 1 --device 9
  #      emulator -avd Pixel_XL_API_24 -no-window -skin 615x1025 -scale 560dpi -memory 1536 &
  #      android-wait-for-emulator
  #      adb shell input keyevent 82
  #    fi

  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      $ANDROID_HOME/platform-tools/adb -P 5037 -s emulator-5554 install /home/travis/.nvm/versions/node/v10.15.3/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-v1.18.0.apk
    fi

script:
  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      $ANDROID_HOME/platform-tools/adb -P 5037 -s emulator-5554 install /home/travis/.nvm/versions/node/v10.15.3/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk
    fi

  - |
    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
      appium &
      mvn -q clean verify -Dtags=$TEST_SUITE
    fi

#sudo: required
#language: java
#
#matrix:
#  include:
#    - if: commit_message =~ /ios/
#      env: TEST_SUITE="TravisTest123"
#      os: osx
#      osx_image: xcode10.2
#      jdk: openjdk12
#
##    - if: commit_message =~ /ios/
##      env: TEST_SUITE="TravisTest1"
##      os: osx
##      osx_image: xcode10.2
##      jdk: openjdk12
#
#install:
#  - |
#    if [[ $TRAVIS_OS_NAME == "osx" ]]; then
#      brew update
#      brew install awscli
#      cd /Users/travis/build/antonzenkevich/travisAndroid
#      unzip "Perchwell Staging.zip"
#      npm install -g appium
#      brew cask install google-chrome
#    fi
#
#script:
#
#  - |
#    if [[ $TRAVIS_OS_NAME == "osx" ]]; then
#      appium &
#      mvn -q clean verify -Dtags=$TEST_SUITE -DtestEnvironment=ios
#    fi