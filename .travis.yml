##jdk: oraclejdk8
##os: osx
##osx_image: xcode9.3
##language: java
##env:
##  global:
##    - PATH=$HOME/.local/bin:$PATH
##    - SYS=26 ABI="google_apis;x86"
##
##matrix:
##  include:
##    - if: commit_message =~ /ios/
##      env: TEST_SUITE="TravisTest1"
##
###    - if: commit_message =~ /ios/
###      env: TEST_SUITE="TravisTest1"
##
##before_install:
##  - brew update
##  - mkdir -p ~/.android
##  - touch ~/.android/repositories.cfg
##  # install correct version of java on osx
##  # skip brew update
##  - export HOMEBREW_NO_AUTO_UPDATE=1
##  # Accept licenses before installing components, no need to echo y for each component
##  - brew cask install android-sdk
##  - export ANDROID_SDK_ROOT=/usr/local/share/android-sdk/
##  - export ANDROID_HOME=/usr/local/share/android-sdk/
##  - yes | /usr/local/share/android-sdk/tools/bin/sdkmanager --licenses
##  # Platform tools
##  - brew cask install android-platform-tools
##  - /usr/local/share/android-sdk/tools/bin/sdkmanager "emulator" "tools"
##  # install older build tools (for emulator)
##  - /usr/local/share/android-sdk/tools/bin/sdkmanager "build-tools;28.0.3" "platforms;android-26"
##  # Create and start emulator.
##  - /usr/local/share/android-sdk/tools/bin/sdkmanager "system-images;android-$SYS;$ABI"
##  - echo no | /usr/local/share/android-sdk/tools/bin/avdmanager create avd -n Pixel_XL_API_26 -k "system-images;android-$SYS;$ABI"
##  - /usr/local/share/android-sdk/tools/emulator -avd Pixel_XL_API_26 -no-window -no-skin -no-audio &
##  # fix timezone warning on osx
##  - sudo ln -sf /usr/share/zoneinfo/US/Pacific /etc/localtime
##  - /usr/local/bin/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
##  - /usr/local/bin/adb shell input keyevent 82#
##
##install:
##  - brew install awscli
##  - brew upgrade node
##  - npm install -g appium@1.9.1
##  - brew cask install google-chrome
##
##script:
##  - appium &
##  - mvn -q clean verify -Dtags=$TEST_SUITE
#
#jdk: oraclejdk11
#sudo: required
#dist: trusty
#env:
#  global:
#    - PATH=$HOME/.local/bin:$PATH
#    - SYS=25 ABI="google_apis;x86_64"
#
#matrix:
#  include:
#    - if: commit_message =~ /android/
#      env: TEST_SUITE="TravisTest"
#      language: generic
#      os: linux
#
#    - if: commit_message =~ /android/
#      env: TEST_SUITE="TravisTest1"
#      language: generic
#      os: linux
#
#before_install:
#  - |
#    if [ $TRAVIS_OS_NAME == "linux" ]; then
#      export DISPLAY=:99.0
#      sh -e /etc/init.d/xvfb start
#      sleep 3 # give xvfb some time to start
#    fi
## Install android tools
#  - ANDROID_TOOLS=4333796 # android-28
#  - export ANDROID_HOME=~/android-sdk
#  - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
#  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
#  - rm android-sdk-tools.zip
#  - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
#  # Silence warning.
#  - mkdir -p ~/.android
#  - touch ~/.android/repositories.cfg
#  # Accept licenses before installing components, no need to echo y for each component
#  - yes | sdkmanager --licenses
#  # Platform tools
#  - sdkmanager "emulator" "tools" "platform-tools" > /dev/null
#  - sdkmanager --list | head -15
#  # install older build tools (for emulator)
#  - sdkmanager "build-tools;26.0.3" "platforms;android-25" > /dev/null
#  # Create and start emulator.
#  - sdkmanager "system-images;android-$SYS;$ABI" > /dev/null
#  - sdkmanager --list
#  - rm -rf $ANDROID_HOME/emulator
#  # Install latest canary of emulator
#  - cd $ANDROID_HOME
#  - sudo apt-get install -y libunwind8 libc++1
#  - wget -q "https://dl.google.com/android/repository/emulator-linux-5438295.zip" -O emulator.zip
#  - unzip -q emulator.zip
#  - cd -
#  - echo no | avdmanager create avd -n Pixel_XL_API_25 -k "system-images;android-$SYS;$ABI"
#  - $ANDROID_HOME/emulator/emulator -avd Pixel_XL_API_25 -no-snapshot -no-accel -no-window &
#  - adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
#  - adb shell input keyevent 82
#
#install:
#  - |
#    if [[ $TRAVIS_OS_NAME == "linux" ]]; then
#      sudo apt-get update
#      sudo apt-get install build-essential libssl-dev
#      sudo curl https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
#      source ~/.profile
#      nvm --version
#      nvm install 10.15.3
#      nvm use 10.15.3
#      node -v
#      npm -v
#      brew update
#      node -v
#      npm -v
#      npm install -g appium@1.9.1
#    fi
#
#script:
##  - appium --log-level error &
#  - appium &
#  - mvn -q clean verify -Dtags=$TEST_SUITE

language: android
sudo: false

jdk:
  - oraclejdk8

env:
  global:
    # include $HOME/.local/bin for `aws`
    - PATH=$HOME/.local/bin:$PATH
    # Add $JAVA_HOME/bin to PATH (for Appium executing)
    - PATH=$PATH:$JAVA_HOME/bin

matrix:
  include:
    - if: commit_message =~ /android/
      env: TEST_SUITE="TravisTest"

    - if: commit_message =~ /android/
      env: TEST_SUITE="TravisTest1"

android:
  components:
    - tools
    - extra-google-m2repository
    - extra-android-m2repository
    - android-26
    - add-on
    - extra
    - sys-img-x86-android-26
    - extra-google-google_play_services
  licenses:
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'

before_install:
  - touch ~/.android/repositories.cfg
#  - node -v

  # Install the rest of tools (e.g. avdmanager)
  - echo y | sdkmanager tools

  # Install the system image.
  - yes | sdkmanager "platforms;android-26"
  - yes | sdkmanager --install "system-images;android-26;google_apis;x86"

  # Install appium and appium-doctor
  - nvm install 9
  - npm install appium@1.11.0 appium-doctor

  # Run appium-doctor
  - "./node_modules/.bin/appium-doctor"

  # Run appium in background and logging to appium_log.txt file
#  - "./node_modules/.bin/appium --session-override --log-level info > ~/appium_log.txt &"

before_script:
  - echo no | avdmanager create avd --force -n Pixel_XL_API_26 -k "system-images;android-26;google_apis;x86"
  - $ANDROID_HOME/emulator/emulator -avd Pixel_XL_API_26 -no-accel -no-audio -no-window &
#  - $ANDROID_HOME/emulator/emulator -avd Pixel_XL_API_26 -no-accel -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
  - /usr/local/android-sdk/platform-tools/adb -P 5037 -s emulator-5554 install -g /home/travis/build/antonzenkevich/travisAndroid/node_modules/appium/node_modules/io.appium.settings/apks/settings_apk-debug.apk
  - /usr/local/android-sdk/platform-tools/adb -P 5037 -s emulator-5554 install /home/travis/build/antonzenkevich/travisAndroid/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-v3.1.1.apk
  - /usr/local/android-sdk/platform-tools/adb -P 5037 -s emulator-5554 install /home/travis/.nvm/versions/node/v10.15.3/lib/node_modules/appium/node_modules/appium-uiautomator2-server/apks/appium-uiautomator2-server-debug-androidTest.apk
  - /usr/local/android-sdk/platform-tools/adb shell pm list instrumentation
#  - /usr/local/android-sdk/platform-tools/adb shell am instrument -w io.appium.uiautomator2.server.test/android.support.test.runner.AndroidJUnitRunner

script:
  - "./node_modules/.bin/appium --session-override &"
  - mvn -q clean verify -Dtags=$TEST_SUITE